软件危机
软件工程
管理的三要素
项目管理的三要素
软件项目管理
软件过程
广义软件过程
生命周期模型vs软件开发过程
管理的目的
PDCA
IDEAL

软件过程三大阶段
软硬件一体化
软件支持硬件完成计算任务+功能单一+复杂度有限+需求几乎不变更
软件成为独立的产品
软件摆脱硬件的束缚+功能更强大+个人电脑的出现+需求多变+兼容性+来自市场的压力
网络化和服务化
功能更加复杂+规模更大+用户数量激增+快速演化需求不确定+分发方式变化+开源文化盛行+进一步网络化和服务化

瀑布模型理解
瀑布模型不是单一的模型，是一系列模型的集合，覆盖从（少量的过程元素）简单场景到（大量的过程元素）复杂场景；
软件开发项目要结合实际情况来选择合适的过程元素的瀑布模型，基本原则是项目面临的困难和挑战越多应该使用越复杂的模型；
软件项目团队往往会低估项目的难度，从而选择简单的瀑布模型


CMMI模型
初始：流程未定义+不可预测+不可控制+被动的
开发混乱+个人主义+救火文化+过程概念
已管理：流程是为项目所定义+被动的
项目管理+计划跟踪+需求管理+配置管理
已定义：流程是为组织所定义+主动的
标准流程+相应规范+项目小组+定义过程
定量管理：流程是被度量和控制的
预测模型+统计手段+过程管理
已优化：专注于过程改进
统计方法+过程偏差+找到根源+避免类似
状态；结果（未来）

CMMI VS AGILE
CMMI模型是过程改进参考模型，而敏捷是项目管理方法，不在同一个方面

迭代式
一个大型软件系统开发的过程是一个持续学习和交流的过程，软件系统的交付不是一次完成的，而是分为多个迭代周期，逐步完成交付的

敏捷宣言
个体和互动高于流程和工具
工作的软件高于详尽的文档
客户合作高于合作谈判
适应变化高于遵循计划
尽管右项有其价值，但是我们更加重视左项

开源软件开发方法
是基于并行开发模式的软件开发的组织和管理的方法、

软件应用典型特征
进一步网络化和服务化
用户的需求多种多样
错综复杂的部署环境
软件服务和产品的变化


领导特征
诚实+能力+远见+激励

管理知识工作的关键原则
管理者管理不了知识工作者，知识工作者需要学会和实现自我管理

知识工作者必须要
有积极性+协商承诺+估算计划+跟踪计划+计划交付高质量产物

激励手段
威逼利诱+鼓励承诺  -》交易型领导+转变型领导

自主团队的必要性
软件工作是一个极其复杂和富有创造力的知识工作
软件工作是脑力劳动+处理和讨论复杂的抽象概念+将不同的部分整合成一个可以工作的系统

自主团队的特点
目标角色+开发策略+开发计划+开发流程+自行度量管理控制项目工作

TSP对自主团队的支持
PSP-》个人技能培养-》团队成员
TSP-》团队组建过程-》团队规范
TSP-》团队工作过程-》团队管理

承诺的制定
自愿承诺+公开可信

TSP launch
产品目标+业务目标-》制定角色+小组目标-》制定开发策略+开发流程-》整体计划-》质量计划-》个人计划-》风险评估-》准备向管理成汇报计划-》向管理层汇报计划

TSP角色职能
项目组长：建立一个高效率的团队+激励团队成员努力工作+解决团队中的问题+向管理层汇报计划
计划经理：开发团队计划和个人计划+报告项目成员的状态
开发经理：开发优秀的软件产品+充分利用团队成员的技能
支持经理：提供团队成员在开发过程中的工具和环境
质量经理：使得团队成员严格按照质量计划来开展，创造出高质量的软件产品+维持评审会议的正常进行+提交评审报告
过程经理：团队成员的记录，报告和跟踪过程数据+产出会议报告
开发人员



